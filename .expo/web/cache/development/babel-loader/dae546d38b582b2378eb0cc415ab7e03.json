{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rn-starter\\\\src\\\\screens\\\\ColorScreen.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add Color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }\n  }));\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\n\nvar style = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["C:/Users/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","randomRgb","item","height","width","backgroundColor","red","Math","floor","random","green","blue","style","StyleSheet","create"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAE1B,kBAA4BD,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOE,MAAP;AAAA,MAAeC,SAAf;;AAGA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,WAAhB;AAA6B,IAAA,OAAO,EAAI,mBAAM;AAC1CA,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKW,oBAAC,QAAD;AACR,IAAA,YAAY,EAAG,sBAACC,IAAD;AAAA,aAAUA,IAAV;AAAA,KADP;AAER,IAAA,IAAI,EAAIH,MAFA;AAGR,IAAA,UAAU,EAAI,0BAAY;AAAA,UAAVG,IAAU,QAAVA,IAAU;AACzB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAAEC,UAAAA,MAAM,EAAC,GAAT;AAAcC,UAAAA,KAAK,EAAE,GAArB;AAA0BC,UAAAA,eAAe,EAAGH;AAA5C,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALX,CADJ;AAgBC,CArBD;;AAyBA,IAAMD,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEpB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,kBAAcH,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AACH,CAPD;;AASA,IAAMC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAmB,EAAnB,CAAd;AAKA,eAAehB,WAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { Text, StyleSheet, Button, View, FlatList } from 'react-native';\r\n\r\n\r\nconst ColorScreen = () => {\r\n\r\nconst [colors, setColors] = useState([]);\r\n\r\n\r\nreturn (\r\n    <View>\r\n    <Button title = 'Add Color'  onPress = {() => {\r\n        setColors([...colors, randomRgb()]);\r\n    }}/>\r\n              \r\n               <FlatList \r\n       keyExtractor= {(item) => item}\r\n       data = {colors}\r\n       renderItem = {({item}) => {\r\n        return <View style = {{ height:100, width: 100, backgroundColor : item }} ></View>;\r\n       }}\r\n        />\r\n    </View>\r\n);\r\n\r\n};\r\n\r\n\r\n\r\nconst randomRgb = () => {\r\n\r\n    const red = Math.floor(Math.random() * 256);\r\n    const green = Math.floor(Math.random() * 256);\r\n    const blue = Math.floor(Math.random() * 256);\r\n\r\n    return `rgb(${red}, ${green}, ${blue})`;\r\n};\r\n\r\nconst style = StyleSheet.create ({\r\n\r\n\r\n});\r\n\r\nexport default ColorScreen;"]},"metadata":{},"sourceType":"module"}