{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rn-starter\\\\src\\\\screens\\\\BoxScreen.js\";\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar BoxScreen = function BoxScreen() {\n  return React.createElement(View, {\n    style: styles.viewStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Child #1\"), React.createElement(Text, {\n    style: styles.textStyle2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Child #2\"), React.createElement(Text, {\n    style: styles.textStyle3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Child #3\"));\n};\n\nvar styles = StyleSheet.create({\n  viewStyle: {\n    flexDirection: 'row',\n    borderWidth: 3,\n    flex: 10,\n    borderColor: 'black'\n  },\n  textStyle1: {\n    borderWidth: 3,\n    height: 50,\n    width: 50,\n    borderColor: 'red'\n  },\n  textStyle2: {\n    borderWidth: 3,\n    height: 50,\n    width: 50,\n    borderColor: 'red'\n  },\n  textStyle3: {\n    borderWidth: 3,\n    height: 50,\n    width: 50,\n    borderColor: 'red'\n  }\n});\nexport default BoxScreen;","map":{"version":3,"sources":["C:/Users/rn-starter/src/screens/BoxScreen.js"],"names":["React","BoxScreen","styles","viewStyle","textStyle1","textStyle2","textStyle3","StyleSheet","create","flexDirection","borderWidth","flex","borderColor","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAGpB,SACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIH,MAAM,CAACI,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADA;AASH,CAZD;;AAcA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAY7BL,EAAAA,SAAS,EAAE;AAEPM,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,WAAW,EAAE,CAHN;AAIPC,IAAAA,IAAI,EAAE,EAJC;AAKPC,IAAAA,WAAW,EAAE;AALN,GAZkB;AAuB7BR,EAAAA,UAAU,EAAE;AAERM,IAAAA,WAAW,EAAE,CAFL;AAGRG,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,KAAK,EAAE,EAJC;AAKRF,IAAAA,WAAW,EAAE;AALL,GAvBiB;AAgC7BP,EAAAA,UAAU,EAAE;AAERK,IAAAA,WAAW,EAAE,CAFL;AAGRG,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,KAAK,EAAE,EAJC;AAKRF,IAAAA,WAAW,EAAE;AALL,GAhCiB;AAyC7BN,EAAAA,UAAU,EAAE;AAERI,IAAAA,WAAW,EAAE,CAFL;AAGRG,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,KAAK,EAAE,EAJC;AAKRF,IAAAA,WAAW,EAAE;AALL;AAzCiB,CAAlB,CAAf;AAoDA,eAAeX,SAAf","sourcesContent":["import React from \"react\";\r\nimport {Text, StyleSheet, View} from \"react-native\";\r\n\r\n\r\n\r\nconst BoxScreen = () => {\r\n        \r\n\r\n    return( \r\n    <View style = {styles.viewStyle}>\r\n        <Text style = {styles.textStyle1}>Child #1</Text>\r\n        <Text style = {styles.textStyle2}>Child #2</Text>\r\n        <Text style = {styles.textStyle3}>Child #3</Text>\r\n    </View>\r\n    );\r\n\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    \r\n    //alignItems option flex-start; center; flex-end\r\n    //flexDirection option column; row\r\n    //justifyContent: flex-start (default), center,flex-end, space-between, space-around\r\n    // flex value should be equal to 10 (Parent space)\r\n    // alignSelf will override alignItems on parent style prop. Same values as alignItems.\r\n    //dont forget box model principles please border padding margin. etc.\r\n    //Position: relative; absolute; default is relative for absolute it will ignore elements with siblings however it will obey with flex box prop with the parent.\r\n    //top:0, bottom:0 ; left: 0; right :0; same as margin\r\n    //...Stylesheet.absoluteFillObject = position: absolute, top, bottom,left, right = 0\r\n    viewStyle: {\r\n        \r\n        flexDirection: 'row',\r\n        borderWidth: 3,\r\n        flex: 10,\r\n        borderColor: 'black'\r\n        \r\n        \r\n\r\n    },\r\n\r\n    textStyle1: {\r\n        \r\n        borderWidth: 3,\r\n        height: 50,\r\n        width: 50,\r\n        borderColor: 'red'\r\n          \r\n    },\r\n\r\n    textStyle2: {\r\n        \r\n        borderWidth: 3,\r\n        height: 50,\r\n        width: 50,\r\n        borderColor: 'red'\r\n          \r\n    },\r\n\r\n    textStyle3: {\r\n        \r\n        borderWidth: 3,\r\n        height: 50,\r\n        width: 50,\r\n        borderColor: 'red'\r\n          \r\n    }\r\n});\r\n\r\n\r\nexport default BoxScreen;\r\n"]},"metadata":{},"sourceType":"module"}