{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rn-starter\\\\src\\\\screens\\\\ColorAdjust.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.colorToChange) {\n    case 'red':\n      return state.red + action.amount > 255 || state.red + change < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.amount\n      });\n\n    case 'green':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.amount\n      });\n\n    case 'blue':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.amount\n      });\n\n    case 'default':\n      return state;\n  }\n};\n\nvar ColorAdjustScreen = function ColorAdjustScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        colorToChange: 'red',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        colorToChange: 'red',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        colorToChange: 'blue',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        colorToChange: 'blue',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        colorToChange: 'green',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        colorToChange: 'green',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100,\n      width: 100,\n      backgroundColor: \"rgb(\" + red + \", \" + green + \", \" + blue + \" )\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar style = StyleSheet.create({});\nexport default ColorAdjustScreen;","map":{"version":3,"sources":["C:/Users/rn-starter/src/screens/ColorAdjust.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","colorToChange","red","amount","change","green","blue","ColorAdjustScreen","dispatch","height","width","backgroundColor","style","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport { Text, StyleSheet, Button, View, FlatList } from 'react-native';\r\nimport ColorCounter from '../components/ColorCounter';\r\n\r\nconst COLOR_INCREMENT = 15;\r\nconst reducer = (state, action) => {\r\n    switch (action.colorToChange){\r\n        case 'red':\r\n        return state.red + action.amount > 255 || state.red + change < 0 ? state :{...state, red: state.red + action.amount}; // ternary expression not return on condition must start at start line \r\n        case 'green':\r\n            return {...state, green: state.green + action.amount};\r\n        case 'blue':\r\n            return {...state, blue: state.blue+ action.amount};\r\n        case 'default':\r\n            return state;    \r\n\r\n\r\n    }\r\n};\r\n\r\nconst ColorAdjustScreen = () => {\r\n \r\nconst [state, dispatch] = useReducer(reducer, {red: 0, green: 0, blue: 0});\r\nconst {red, green, blue } = state;\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <View>\r\n\r\n        <ColorCounter onIncrease = {() => dispatch({ colorToChange: 'red', amount: COLOR_INCREMENT})} onDecrease = {() => dispatch({ colorToChange: 'red', amount: -1 * COLOR_INCREMENT})} color = \"Red\"/>\r\n        <ColorCounter onIncrease = {() => dispatch({ colorToChange: 'blue', amount: COLOR_INCREMENT})} onDecrease = {() => dispatch({ colorToChange: 'blue', amount: -1 * COLOR_INCREMENT})}  color = \"Blue\"/>\r\n        <ColorCounter onIncrease = {() => dispatch({ colorToChange: 'green', amount: COLOR_INCREMENT})} onDecrease = {() => dispatch({ colorToChange: 'green', amount: -1 * COLOR_INCREMENT})}  color = \"Green\"/>\r\n\r\n        <View style = {{height:100, width:100, backgroundColor: `rgb(${red}, ${green}, ${blue} )` }}></View>\r\n\r\n    </View>\r\n\r\n);\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst style = StyleSheet.create ({\r\n\r\n\r\n});\r\n\r\n\r\n\r\nexport default ColorAdjustScreen;"]},"metadata":{},"sourceType":"module"}