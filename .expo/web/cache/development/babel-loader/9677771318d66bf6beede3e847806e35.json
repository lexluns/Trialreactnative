{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rn-starter\\\\src\\\\screens\\\\CounterScreen.js\";\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.ValuetoChange) {\n    case 'increase':\n      return {\n        count: state.count + action.payload\n      };\n\n    case 'decrease':\n      return {\n        count: state.count - action.payload\n      };\n\n    case 'default':\n      return state;\n  }\n};\n\nvar CounterScreen = function CounterScreen() {\n  var _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var count = state.count;\n  React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Increase\",\n    onPress: function onPress() {\n      return dispatch({\n        ValuetoChange: 'increase',\n        payload: 1\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    title: \"Decrease\",\n    onPress: function onPress() {\n      return dispatch({\n        ValuetoChange: 'decrease',\n        payload: 1\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"Current Count: \", count));\n};\n\nvar styles = StyleSheet.create({});\nexport default CounterScreen;","map":{"version":3,"sources":["C:/Users/rn-starter/src/screens/CounterScreen.js"],"names":["React","useReducer","reducer","state","action","ValuetoChange","count","payload","CounterScreen","dispatch","styles","StyleSheet","create"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAQA,MAAM,CAACC,aAAf;AACI,SAAK,UAAL;AACA,aAAQ;AAAEC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA9B,OAAR;;AACA,SAAK,UAAL;AACA,aAAQ;AAAED,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA9B,OAAR;;AACA,SAAK,SAAL;AACI,aAAOJ,KAAP;AANR;AAUH,CAXD;;AAcA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAExB,oBAA0BP,UAAU,CAACC,OAAD,EAAU;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAV,CAApC;AAAA;AAAA,MAAOH,KAAP;AAAA,MAAcM,QAAd;;AACA,MAAOH,KAAP,GAAgBH,KAAhB,CAAOG,KAAP;AAEA,sBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,UAAhB;AAA2B,IAAA,OAAO,EAAI;AAAA,aAAMG,QAAQ,CAAC;AAAEJ,QAAAA,aAAa,EAAE,UAAjB;AAA6BE,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAd;AAAA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,UAAhB;AAA2B,IAAA,OAAO,EAAI;AAAA,aAAME,QAAQ,CAAC;AAAEJ,QAAAA,aAAa,EAAE,UAAjB;AAA6BE,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAd;AAAA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAIA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsBD,KAAtB,CAJA;AAQH,CAbD;;AAeA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAmB,EAAnB,CAAf;AAKA,eAAeJ,aAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport { View, Text, StyleSheet, Button } from 'react-native';\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.ValuetoChange){\r\n        case 'increase':\r\n        return  { count: state.count + action.payload}; // ternary expression not return on condition must start at start line \r\n        case 'decrease':\r\n        return  { count: state.count - action.payload};\r\n        case 'default':\r\n            return state;    \r\n\r\n\r\n    }\r\n};\r\n\r\n\r\nconst CounterScreen = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, {count: 0});\r\n    const {count} = state;\r\n\r\n    <View>\r\n    <Button title = \"Increase\" onPress = {() => dispatch({ ValuetoChange: 'increase', payload: 1})} />\r\n    <Button title = \"Decrease\" onPress = {() => dispatch({ ValuetoChange: 'decrease', payload: 1})} />\r\n\r\n    <Text>Current Count: {count}</Text>\r\n</View>\r\n \r\n\r\n};\r\n\r\nconst styles = StyleSheet.create ({\r\n\r\n\r\n});\r\n\r\nexport default CounterScreen;"]},"metadata":{},"sourceType":"module"}